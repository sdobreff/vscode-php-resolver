{
	"name": "php-resolver",
	"displayName": "PHP Resolver",
	"description": "Resolves most of your PHP problems - imports, expands and collapses php namespaces, monitors your PHP error log, uses PHP beautifier and PHP sniffer",
	"version": "2.1.2",
	"publisher": "StoilDobreff",
	"author": "Stoil Dobreff <sdobreff@gmail.com>",
	"license": "SEE LICENSE IN LICENSE",
	"versionChanges": "Fixed bugs with removing namespaces when full classname is needed",
	"newVersion": "Thank you for installing the PHP Resolver extension. Click OK if you want to check out the repository.",
	"engines": {
		"vscode": "^1.68.0"
	},
	"categories": [
		"Programming Languages",
		"Formatters",
		"Linters"
	],
	"keywords": [
		"php",
		"namespace",
		"class",
		"PSR",
		"import",
		"collapse",
		"expand",
		"WordPress",
		"sniffer",
		"beautifier",
		"PHP error log",
		"phpcs",
		"phpcbf",
		"error log",
		"php-cs-fixer",
		"linter"
	],
	"galleryBanner": {
		"color": "#282c34",
		"theme": "dark"
	},
	"activationEvents": [
		"onLanguage:php",
		"onCommand:phpResolver.import",
		"onCommand:phpResolver.importAll",
		"onCommand:phpResolver.expand",
		"onCommand:phpResolver.sort",
		"onCommand:phpResolver.generateNamespace",
		"onCommand:phpResolver.beautify",
		"onCommand:phpResolver.fixer",
		"onCommand:phpResolver.clearErrorChannel"
	],
	"main": "./src/extension",
	"icon": "images/icon.png",
	"contributes": {
		"menus": {
			"editor/context": [
				{
					"when": "resourceLangId == php",
					"command": "phpResolver.import",
					"group": "0_php_resolver@1"
				},
				{
					"when": "resourceLangId == php",
					"command": "phpResolver.importAll",
					"group": "0_php_resolver@2"
				},
				{
					"when": "resourceLangId == php",
					"command": "phpResolver.expand",
					"group": "0_php_resolver@3"
				},
				{
					"when": "resourceLangId == php",
					"command": "phpResolver.sort",
					"group": "0_php_resolver@4"
				},
				{
					"when": "resourceLangId == php",
					"command": "phpResolver.generateNamespace",
					"group": "0_php_resolver@7"
				},
				{
					"when": "resourceLangId == php",
					"command": "phpResolver.beautify",
					"group": "0_php_resolver@8"
				},
				{
					"when": "resourceLangId == php",
					"command": "phpResolver.fixer",
					"group": "0_php_resolver@9"
				},
				{
					"when": "resourceLangId == php",
					"command": "phpResolver.clearErrorChannel",
					"group": "0_php_resolver@10"
				}
			]
		},
		"configuration": {
			"type": "object",
			"title": "PHP Resolver extension configuration",
			"properties": {
				"phpResolver.exclude": {
					"type": "string",
					"default": "**/node_modules/**",
					"description": "Exclude glob pattern while finding files"
				},
				"phpResolver.showMessageOnStatusBar": {
					"type": "boolean",
					"default": false,
					"description": "Show message on status bar instead of notification box"
				},
				"phpResolver.autoSort": {
					"type": "boolean",
					"default": true,
					"description": "Auto sort after imports"
				},
				"phpResolver.sortOnSave": {
					"type": "boolean",
					"default": false,
					"description": "Auto sort when a file is saved"
				},
				"phpResolver.autoImportOnSave": {
					"type": "boolean",
					"default": false,
					"description": "Auto import classes on save"
				},
				"phpResolver.dontImportGlobal": {
					"type": "boolean",
					"default": true,
					"description": "Do not import global classes"
				},
				"phpResolver.sortAlphabetically": {
					"type": "boolean",
					"default": false,
					"description": "Sort imports in alphabetical order instead of line length"
				},
				"phpResolver.sortNatural": {
					"type": "boolean",
					"default": false,
					"description": "Sort imports using a 'natural order' algorithm"
				},
				"phpResolver.leadingSeparator": {
					"type": "boolean",
					"default": true,
					"description": "Expand class with leading namespace separator"
				},
				"phpResolver.highlightOnSave": {
					"type": "boolean",
					"default": false,
					"description": "Auto highlight not imported and not used when a file is saved"
				},
				"phpResolver.highlightOnOpen": {
					"type": "boolean",
					"default": false,
					"description": "Auto highlight not imported and not used when a file is opened"
				},
				"phpResolver.phpBeautifierCommand": {
					"type": "string",
					"default": "phpcbf",
					"description": "Full path to the PHP beautifier command (phpcbf)"
				},
				"phpResolver.phpSnifferCommand": {
					"type": "string",
					"default": "phpcs",
					"description": "Full path to the PHP sniffer command (phpcs)"
				},
				"phpResolver.phpCsFixerCommand": {
					"type": "string",
					"default": "php-cs-fixer",
					"description": "Full path to the PHP fixer command (php-cs-fixer)"
				},
				"phpResolver.phpStandards": {
					"type": "string",
					"default": "",
					"description": "The standards to be used with the beautifier / sniffer. Comma separated."
				},
				"phpResolver.fixerConfigString": {
					"type": "string",
					"editPresentation": "multilineText",
					"default": "<?php\n\nreturn (new PhpCsFixer\\Config())\n    ->setRules([\n   '@PSR12' => false, \n   '@Symfony' => true, \n   'indentation_type' => true, \n   'array_indentation' => true, \n   'array_syntax' => [\n         'syntax' => 'long' \n      ], \n   'combine_consecutive_unsets' => true, \n   'class_attributes_separation' => [\n            'elements' => [\n               'method' => 'one' \n            ] \n         ], \n   'multiline_whitespace_before_semicolons' => false, \n   'single_quote' => true, \n   'blank_line_after_opening_tag' => true, \n   'blank_line_before_statement' => true, \n   'braces' => [\n                  'allow_single_line_closure' => true, \n                  'position_after_functions_and_oop_constructs' => 'same' \n               ], \n   'cast_spaces' => false, \n   'class_definition' => [\n                     'single_line' => true \n                  ], \n   'concat_space' => [\n                        'spacing' => 'one' \n                     ], \n   'declare_equal_normalize' => true, \n   'function_typehint_space' => true, \n   'single_line_comment_style' => [\n                           'comment_types' => [\n                              'hash' \n                           ] \n                        ], \n   'include' => true, \n   'lowercase_cast' => true, \n   'native_function_casing' => true, \n   'new_with_braces' => true, \n   'no_blank_lines_after_class_opening' => true, \n   'no_blank_lines_after_phpdoc' => true, \n   'no_blank_lines_before_namespace' => false, \n   'no_empty_comment' => true, \n   'no_empty_phpdoc' => true, \n   'no_empty_statement' => true, \n   'no_extra_blank_lines' => [\n                                 'tokens' => [\n                                    'curly_brace_block', \n                                    'extra', \n                                    'parenthesis_brace_block', \n                                    'square_brace_block', \n                                    'throw', \n                                    'use' \n                                 ] \n                              ], \n   'no_leading_import_slash' => true, \n   'no_leading_namespace_whitespace' => true, \n   'no_mixed_echo_print' => [\n                                       'use' => 'echo' \n                                    ], \n   'no_multiline_whitespace_around_double_arrow' => true, \n   'no_short_bool_cast' => true, \n   'no_singleline_whitespace_before_semicolons' => true, \n   'no_spaces_around_offset' => true, \n   'no_trailing_comma_in_list_call' => true, \n   'no_trailing_comma_in_singleline_array' => true, \n   'no_unneeded_control_parentheses' => true, \n   'no_unused_imports' => true, \n   'no_whitespace_before_comma_in_array' => true, \n   'no_whitespace_in_blank_line' => true, \n   'normalize_index_brace' => true, \n   'object_operator_without_whitespace' => true, \n   'php_unit_fqcn_annotation' => true, \n   'phpdoc_align' => true, \n   'phpdoc_annotation_without_dot' => false, \n   'phpdoc_indent' => true, \n   'general_phpdoc_tag_rename' => true, \n   'phpdoc_no_access' => true, \n   'phpdoc_no_alias_tag' => true, \n   'phpdoc_no_empty_return' => false, \n   'phpdoc_no_package' => false, \n   'phpdoc_no_useless_inheritdoc' => true, \n   'phpdoc_return_self_reference' => true, \n   'phpdoc_scalar' => true, \n   'phpdoc_separation' => true, \n   'phpdoc_single_line_var_spacing' => true, \n   'phpdoc_summary' => true, \n   'phpdoc_to_comment' => true, \n   'phpdoc_trim' => true, \n   'phpdoc_types' => true, \n   'phpdoc_var_without_name' => true, \n   'increment_style' => true, \n   'return_type_declaration' => true, \n   'short_scalar_cast' => true, \n   'single_blank_line_before_namespace' => true, \n   'single_class_element_per_statement' => true, \n   'space_after_semicolon' => true, \n   'standardize_not_equals' => true, \n   'ternary_operator_spaces' => true, \n   'trailing_comma_in_multiline' => [\n                                          'elements' => [\n                                             'arrays' \n                                          ] \n                                       ], \n   'trim_array_spaces' => false, \n   'unary_operator_spaces' => false, \n   'whitespace_after_comma_in_array' => true, \n   'single_blank_line_at_eof' => false \n])\n     ->setIndent('\t')\n    ->setLineEnding('\n')\n;",
					"description": "The fixer config PHP file."
				},
				"phpResolver.phpFixerRules": {
					"type": "object",
					"default": {
						"@PSR12": false,
						"@Symfony": true,
						"indentation_type": true,
						"array_indentation": true,
						"array_syntax": {
							"syntax": "long"
						},
						"combine_consecutive_unsets": true,
						"class_attributes_separation": {
							"elements": {
								"method": "one"
							}
						},
						"multiline_whitespace_before_semicolons": false,
						"single_quote": true,
						"blank_line_after_opening_tag": true,
						"blank_line_before_statement": true,
						"braces": {
							"allow_single_line_closure": true,
							"position_after_functions_and_oop_constructs": "same"
						},
						"cast_spaces": false,
						"class_definition": {
							"single_line": true
						},
						"concat_space": {
							"spacing": "one"
						},
						"declare_equal_normalize": true,
						"function_typehint_space": true,
						"single_line_comment_style": {
							"comment_types": [
								"hash"
							]
						},
						"include": true,
						"lowercase_cast": true,
						"native_function_casing": true,
						"new_with_braces": true,
						"no_blank_lines_after_class_opening": true,
						"no_blank_lines_after_phpdoc": true,
						"no_blank_lines_before_namespace": false,
						"no_empty_comment": true,
						"no_empty_phpdoc": true,
						"no_empty_statement": true,
						"no_extra_blank_lines": {
							"tokens": [
								"curly_brace_block",
								"extra",
								"parenthesis_brace_block",
								"square_brace_block",
								"throw",
								"use"
							]
						},
						"no_leading_import_slash": true,
						"no_leading_namespace_whitespace": true,
						"no_mixed_echo_print": {
							"use": "echo"
						},
						"no_multiline_whitespace_around_double_arrow": true,
						"no_short_bool_cast": true,
						"no_singleline_whitespace_before_semicolons": true,
						"no_spaces_around_offset": true,
						"no_trailing_comma_in_list_call": true,
						"no_trailing_comma_in_singleline_array": true,
						"no_unneeded_control_parentheses": true,
						"no_unused_imports": true,
						"no_whitespace_before_comma_in_array": true,
						"no_whitespace_in_blank_line": true,
						"normalize_index_brace": true,
						"object_operator_without_whitespace": true,
						"php_unit_fqcn_annotation": true,
						"phpdoc_align": true,
						"phpdoc_annotation_without_dot": false,
						"phpdoc_indent": true,
						"general_phpdoc_tag_rename": true,
						"phpdoc_no_access": true,
						"phpdoc_no_alias_tag": true,
						"phpdoc_no_empty_return": false,
						"phpdoc_no_package": false,
						"phpdoc_no_useless_inheritdoc": true,
						"phpdoc_return_self_reference": true,
						"phpdoc_scalar": true,
						"phpdoc_separation": true,
						"phpdoc_single_line_var_spacing": true,
						"phpdoc_summary": true,
						"phpdoc_to_comment": true,
						"phpdoc_trim": true,
						"phpdoc_types": true,
						"phpdoc_var_without_name": true,
						"increment_style": true,
						"return_type_declaration": true,
						"short_scalar_cast": true,
						"single_blank_line_before_namespace": true,
						"single_class_element_per_statement": true,
						"space_after_semicolon": true,
						"standardize_not_equals": true,
						"ternary_operator_spaces": true,
						"trailing_comma_in_multiline": {
							"elements": [
								"arrays"
							]
						},
						"trim_array_spaces": false,
						"unary_operator_spaces": false,
						"whitespace_after_comma_in_array": true,
						"single_blank_line_at_eof": false
					},
					"description": "The rules to be used with the php-cs-fixer."
				},
				"phpResolver.phpLogFile": {
					"type": "string",
					"default": "",
					"description": "The PHP error log file - global or for the project."
				},
				"phpResolver.phpLogFilePathRemote": {
					"type": "string",
					"default": "",
					"description": "If your log comes from remote source, using this you can map remote file system to the local one."
				},
				"phpResolver.phpLogFilePathLocal": {
					"type": "string",
					"default": "",
					"description": "If your log comes from remote source, using this you can map local file system to the remote one."
				},
				"phpResolver.addProtocolToLog": {
					"type": "boolean",
					"default": true,
					"description": "Different versions of the vscode are acting differently on resolving files links. From here you can remove 'file://' protocol from the log file output"
				},
				"phpResolver.lineNumberSeparator": {
					"type": "string",
					"default": "#",
					"description": "Different versions of the vscode are using different way to recognize line numbers in the links. From here you can change the separator (usually # or :)"
				},
				"phpResolver.errorLogTruncateSize": {
					"type": "integer",
					"default": "1",
					"description": "Automatically truncate error log file when it reaches the size (in megabytes). 0 means no truncation."
				}
			}
		},
		"commands": [
			{
				"title": "Import Class",
				"command": "phpResolver.import"
			},
			{
				"title": "Import All Classes",
				"command": "phpResolver.importAll"
			},
			{
				"title": "Expand with namespace",
				"command": "phpResolver.expand"
			},
			{
				"title": "Sort Imports",
				"command": "phpResolver.sort"
			},
			{
				"title": "Generate namespace for this file",
				"command": "phpResolver.generateNamespace"
			},
			{
				"title": "Beautify code (phpcbf)",
				"command": "phpResolver.beautify"
			},
			{
				"title": "Fix code (php-cs-fixer)",
				"command": "phpResolver.fixer"
			},
			{
				"title": "Clear error log channel",
				"command": "phpResolver.clearErrorChannel"
			}
		],
		"keybindings": [
			{
				"command": "phpResolver.import",
				"key": "ctrl+alt+i",
				"when": "editorTextFocus"
			},
			{
				"command": "phpResolver.importAll",
				"key": "ctrl+alt+a",
				"when": "editorTextFocus"
			},
			{
				"command": "phpResolver.expand",
				"key": "ctrl+alt+e",
				"when": "editorTextFocus"
			},
			{
				"command": "phpResolver.sort",
				"key": "ctrl+alt+s",
				"when": "editorTextFocus"
			},
			{
				"command": "phpResolver.generateNamespace",
				"key": "ctrl+alt+g",
				"when": "editorTextFocus"
			},
			{
				"command": "phpResolver.beautify",
				"key": "ctrl+alt+b",
				"when": "editorTextFocus"
			},
			{
				"command": "phpResolver.fixer",
				"key": "ctrl+alt+f",
				"when": "editorTextFocus"
			},
			{
				"command": "phpResolver.clearErrorChannel",
				"key": "ctrl+alt+c",
				"when": "editorTextFocus"
			}
		],
		"languages": [
			{
				"id": "PHPLog",
				"aliases": [
					"php-log"
				],
				"configuration": "./log.configuration.json",
				"mimetypes": [
					"log",
					"text/log",
					"text/x-log",
					"text/x-code-output",
					"x-code-output"
				]
			}
		],
		"grammars": [
			{
				"language": "PHPLog",
				"scopeName": "code.log",
				"path": "./src/syntaxes/php-log.tmLanguage.xml"
			}
		]
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/sdobreff/vscode-php-resolver"
	},
	"bugs": {
		"url": "https://github.com/sdobreff/vscode-php-resolver/issues"
	},
	"dependencies": {
		"cross-spawn": "^7.0.3",
		"node-natural-sort": "^0.8.6",
		"node-notifier": "^10.0.0",
		"tail": "^2.2.4"
	},
	"devDependencies": {
		"@types/node": "16.x",
		"@types/vscode": "^1.68.0"
	},
	"__metadata": {
		"id": "5ef755e0-2c5f-4be6-893d-1d85e17228da",
		"publisherDisplayName": "Stoil Dobreff",
		"publisherId": "849beef8-bf63-469c-b5f8-55d04b5b096c",
		"isPreReleaseVersion": false,
		"targetPlatform": "undefined",
		"isApplicationScoped": false,
		"updated": true,
		"preRelease": false,
		"installedTimestamp": 1670835370103
	}
}